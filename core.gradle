apply from: "../base.gradle"

// 通用配置
android {

    defaultConfig {
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        rxhttp_okhttp: parent.ext.okhttpVersion, // OkHttp 版本
                        rxhttp_rxjava: parent.ext.rxJava, // RxJava 版本 可传入rxjava2、rxjava3
                        rxhttp_package: 'rxhttp.wrapper.param'
                ]
            }
        }
    }

//    applicationVariants.all { variant ->
//        variant.outputs.all { output ->  // each 改为 all
//            def fileName = android.defaultConfig.applicationId+"_${variant.versionName}_release.apk"
//            def outFile = output.outputFile
//            if (outFile != null && outFile.name.endsWith('.apk')) {
//                outputFileName = fileName  //  output.outputFile 改为 outputFileName
//            }
//        }
//    }
//
//    signingConfigs {
//        release  {
////            storeFile file("D:\\GitProject\\TheBase\\keystore\\theone.jks")
//            storeFile file("D:\\Theone\\TheBase\\keystore\\theone.jks")
//            storePassword "areyoutheone"
//            keyAlias "areyou"
//            keyPassword "areyoutheone"
//        }
//    }
//
//    buildTypes {
//        debug {
//            debuggable true
//            minifyEnabled false
//            signingConfig signingConfigs.release
//        }
//        release {
//            signingConfig signingConfigs.release
//            minifyEnabled true
//            // 移除无用的resource文件
//            shrinkResources true
//            // Zipalign优化
//            zipAlignEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
}

configurations.all {
    resolutionStrategy {
        force "com.github.bumptech.glide:glide:$glideVersion"
        force "com.squareup.okhttp3:okhttp:$okhttpVersion"
        force "io.reactivex.rxjava3:rxjava:$rxjavaVersion"
        force "io.reactivex.rxjava3:rxandroid:$rxandroidVersion"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    implementation project(':base')
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"
    kapt "com.ljx.rxhttp:rxhttp-compiler:$rxhttpVersion" //生成RxHttp类
}